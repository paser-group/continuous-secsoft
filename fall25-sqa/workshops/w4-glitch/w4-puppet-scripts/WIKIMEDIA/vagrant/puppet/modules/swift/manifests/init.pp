# == Class: Swift
#
# This Puppet class installs and configures a Swift instance
#
# === Parameters
#
# [*storage_dir*]
#   Path where Swift content will be stored (example: '/var/swift').
#
# [*port*]
#   Port for the proxy server to listen on.
#
# [*key*]
#   Secret key.
#
# [*project*]
#   Project the user belongs to.
#
# [*user*]
#   User.
#
# [*cfg_file*]
#   Swift configuration file. The file will be generated by Puppet.
#
# [*private_wikis_secret*]
#   Secret key used as gatekeeping for Thumbor accessing private containers.
#
class swift (
    $storage_dir,
    $port,
    $key,
    $project,
    $user,
    $cfg_file,
    $private_wikis_secret,
) {
    include ::apache::mod::proxy
    include ::apache::mod::proxy_http

    package { ['swift', 'swift-account', 'swift-container', 'swift-object', 'swift-proxy', 'python-webob', 'python-swiftclient']:
        ensure  => 'present',
    }

    user { 'swift':
        ensure     => present,
        managehome => true,
        home       => '/home/swift',
    }

    file { '/etc/swift':
        ensure => 'directory',
        owner  => 'swift',
        group  => 'swift',
    }

    file { '/etc/swift/backups':
        ensure => 'directory',
        owner  => 'swift',
        group  => 'swift',
    }

    file { $storage_dir:
        ensure => 'directory',
        owner  => 'swift',
        group  => 'swift',
    }

    file { "${storage_dir}/1":
        ensure => 'directory',
        owner  => 'swift',
        group  => 'swift',
    }

    file { $cfg_file:
        ensure  => present,
        group   => 'www-data',
        content => template('swift/swift.conf.erb'),
        mode    => '0644',
    }

    file { '/etc/swift/proxy.conf':
        ensure  => present,
        group   => 'www-data',
        content => template('swift/proxy-server.conf.erb'),
        mode    => '0644',
    }

    file { '/usr/local/lib/python2.7/dist-packages/wmf/':
        owner   => 'root',
        group   => 'root',
        mode    => '0444',
        source  => 'puppet:///modules/swift/SwiftMedia/wmf/',
        recurse => 'remote',
        require => Package['python-webob'],
    }

    swift::ring { 'account':
        storage_dir => $storage_dir,
        ring_port   => 6010,
        require     => Package['swift-account'],
    }

    swift::ring { 'object':
        storage_dir => $storage_dir,
        ring_port   => 6020,
        require     => Package['swift-object'],
    }

    swift::ring { 'container':
        storage_dir => $storage_dir,
        ring_port   => 6030,
        require     => Package['swift-container'],
    }

    swift::service { 'account-server':
        require  => Swift::Ring['account'],
    }

    swift::service { 'account-auditor':
        require  => Swift::Ring['account'],
    }

    swift::service { 'account-reaper':
        require  => Swift::Ring['account'],
    }

    swift::service { 'account-replicator':
        require  => Swift::Ring['account'],
    }

    swift::service { 'container-server':
        require  => Swift::Ring['container'],
    }

    swift::service { 'container-auditor':
        require  => Swift::Ring['container'],
    }

    swift::service { 'container-replicator':
        require  => Swift::Ring['container'],
    }

    swift::service { 'container-sync':
        require  => Swift::Ring['container'],
    }

    swift::service { 'container-updater':
        require  => Swift::Ring['container'],
    }

    swift::service { 'object-server':
        require  => Swift::Ring['object'],
    }

    swift::service { 'object-auditor':
        require  => Swift::Ring['object'],
    }

    swift::service { 'object-replicator':
        require  => Swift::Ring['object'],
    }

    swift::service { 'object-updater':
        require  => Swift::Ring['object'],
    }

    swift::service { 'proxy-server':
        require   => File['/usr/local/lib/python2.7/dist-packages/wmf/'],
        subscribe => File['/usr/local/lib/python2.7/dist-packages/wmf/'],
    }

    mediawiki::import::text { 'VagrantRoleSwift':
        content => template('role/swift/VagrantRoleSwift.wiki.erb'),
    }
}
